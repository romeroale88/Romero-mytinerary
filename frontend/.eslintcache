[{"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\index.js":"1","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\App.js":"2","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Header.js":"3","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Carrousel.js":"5","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Image.js":"6","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\User.js":"7","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Call.js":"8","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\City.js":"9","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\pages\\Main.js":"10","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\pages\\Cities.js":"11","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Slide.js":"12","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Loading.js":"13","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\rootReducer.js":"14","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\cityReducer.js":"15","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js":"16","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js":"17","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\actions\\itinerariesActions.js":"18","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Itinerary.js":"19","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Comment.js":"20","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\SignIn.js":"21","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\SignUp.js":"22","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\userReducer.js":"23","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\actions\\userActions.js":"24"},{"size":441,"mtime":1611914787258,"results":"25","hashOfConfig":"26"},{"size":809,"mtime":1612318962239,"results":"27","hashOfConfig":"26"},{"size":384,"mtime":1610971916921,"results":"28","hashOfConfig":"26"},{"size":155,"mtime":1611136747803,"results":"29","hashOfConfig":"26"},{"size":2050,"mtime":1611449707605,"results":"30","hashOfConfig":"26"},{"size":486,"mtime":1611056999988,"results":"31","hashOfConfig":"26"},{"size":1741,"mtime":1613068571192,"results":"32","hashOfConfig":"26"},{"size":362,"mtime":1611145588747,"results":"33","hashOfConfig":"26"},{"size":2097,"mtime":1612818939341,"results":"34","hashOfConfig":"26"},{"size":1203,"mtime":1611361823332,"results":"35","hashOfConfig":"26"},{"size":1952,"mtime":1612146903726,"results":"36","hashOfConfig":"26"},{"size":432,"mtime":1611419628912,"results":"37","hashOfConfig":"26"},{"size":287,"mtime":1611439478517,"results":"38","hashOfConfig":"26"},{"size":365,"mtime":1612373770108,"results":"39","hashOfConfig":"26"},{"size":929,"mtime":1612373700466,"results":"40","hashOfConfig":"26"},{"size":510,"mtime":1612373659914,"results":"41","hashOfConfig":"26"},{"size":589,"mtime":1612814425524,"results":"42","hashOfConfig":"26"},{"size":2247,"mtime":1613016453612,"results":"43","hashOfConfig":"26"},{"size":5729,"mtime":1613041273356,"results":"44","hashOfConfig":"26"},{"size":2005,"mtime":1613019849832,"results":"45","hashOfConfig":"26"},{"size":4339,"mtime":1613068579204,"results":"46","hashOfConfig":"26"},{"size":6691,"mtime":1613043932181,"results":"47","hashOfConfig":"26"},{"size":965,"mtime":1613068584697,"results":"48","hashOfConfig":"26"},{"size":1447,"mtime":1613068607146,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"5iaxyz",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\index.js",[],["106","107"],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\App.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Carrousel.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Image.js",[],["108","109"],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\User.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Call.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\City.js",["110"],"import React, {useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport Itinerary from './Itinerary'\r\nimport itinerariesActions from '../redux/actions/itinerariesActions'\r\nimport citiesActions from '../redux/actions/citiesActions'\r\n\r\n\r\nconst City = (props) =>{\r\n    const [city, setCity] = useState({})\r\n\r\n    const id=(props.match.params.id)\r\n    useEffect(()=> {\r\n        window.scrollTo(0, 0)\r\n        const city = props.cities.filter(city => city._id ===id)\r\n        setCity(city[0])\r\n        props.listItineraries(id)\r\n        if(city.length===0){\r\n            return props.history.push('/cities')\r\n        }\r\n    },[])\r\n\r\n    return (        \r\n        <div className=\"containerCity\" >\r\n            <div className=\"city\" style={{\r\n                backgroundImage:`url(\".${city.cityPic}\")`\r\n            }}>\r\n                <h3>{city.cityName}</h3>\r\n            </div>\r\n            <div className=\"itineraries\">\r\n                {props.itineraries.length !==0 ?\r\n                props.itineraries.map(itinerary =>{\r\n                    return <Itinerary key={itinerary._id} itinerary={itinerary} id={id} />\r\n                }):\r\n                <div className=\"noFound\">\r\n                    <h4>We don't have itineraries yet!</h4>\r\n                </div>\r\n                }\r\n                <div className=\"buttons\">\r\n                    <Link to=\"/cities\">\r\n                        <h6 className=\"buttonCall\">Back to Cities</h6>\r\n                    </Link>\r\n                    <Link to=\"/\">\r\n                        <h6 className=\"buttonCall\">Back to Home</h6>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return {\r\n        cities: state.cityR.cities,\r\n        itineraries: state.itineraryR.itineraries,\r\n        city: state.cityR.city\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    listItineraries: itinerariesActions.getItinerary,\r\n    oneCity: citiesActions.oneCity\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(City)","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\pages\\Main.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\pages\\Cities.js",["111"],"\r\nimport React, {useEffect} from 'react'\r\nimport { connect} from 'react-redux'\r\nimport citiesActions from '../redux/actions/citiesActions'\r\nimport {Link} from 'react-router-dom'\r\nimport Loading from '../components/Loading'\r\n\r\nconst Cities = (props) =>{\r\n    \r\n    // Se fetchea las ciudades\r\n    useEffect(()=> {\r\n        window.scrollTo(0, 0);\r\n        props.addCities()\r\n    },[])\r\n    if(props.loading){\r\n        return <Loading />\r\n    }\r\n\r\n    return(\r\n        <div className=\"buscador\">\r\n            <h2>Cities</h2>\r\n            <input onChange={(e)=>props.search(e.target.value)} type=\"text\" placeholder=\"Search City\"/>\r\n            <div className=\"containerCities\">\r\n                {props.searchCities.length !==0  ?\r\n                props.searchCities.map(({cityPic,cityName,_id})=>{                  \r\n                    return (\r\n                        <Link key={_id} to={`/city/${_id}`}>\r\n                            <div className=\"imagenCity\" style={{\r\n                            backgroundImage:`url('${cityPic}')`,\r\n                            width:'60vw',\r\n                            height:'50vh',\r\n                            backgroundSize:'cover'\r\n                        }}>\r\n                            <h3 >{cityName}</h3>\r\n                            </div>\r\n                        </Link>\r\n                        )\r\n                    })\r\n                    :\r\n                    <div className=\"noFound\">\r\n                        <h4>No cities found</h4>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        listCitites: state.cityR.cities,\r\n        searchCities: state.cityR.searchCities,\r\n        loading: state.cityR.loading\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    addCities: citiesActions.getCities,\r\n    search: citiesActions.search\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities)","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Slide.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Loading.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\cityReducer.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\actions\\itinerariesActions.js",["112"],"import axios from 'axios'\r\nconst itinerariesActions = {\r\n    getItinerary: (id) =>{\r\n        return async(dispatch, getState) =>{\r\n            const respuesta = await fetch('http://localhost:4000/api/itineraries/'+id)\r\n            const data = await respuesta.json()\r\n            dispatch({type: 'ITINERARIES', payload: data.itineraries})\r\n        }\r\n    },\r\n    addComment:(value, id,token)=>{\r\n        return async(dispatch, getState) =>{\r\n            const respuesta = await axios.post('http://localhost:4000/api/comments',{value, id,token},{\r\n                headers:{\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            console.log(respuesta.config)\r\n            dispatch({type: 'ADD_COMMENT', payload:respuesta.config.data})\r\n            \r\n        }\r\n    },\r\n    deleteComment:(id,idComment,token) =>{\r\n        return async(dispatch,getState) =>{\r\n            const respuesta = await axios.put('http://localhost:4000/api/comments/delete',{id,idComment,token},{\r\n                headers:{\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            dispatch({type: 'DELETE_COMMENT', payload:respuesta.config.data})\r\n        }\r\n    },\r\n    modifComment:(value, idComment)=>{\r\n        \r\n        return async(dispatch, getState) =>{\r\n            const respuesta = await axios.put('http://localhost:4000/api/comments',{idComment,value},)\r\n            dispatch({type: 'ADD_COMMENT', payload:respuesta.config.data})\r\n        }\r\n    },\r\n    like:(idItinerary,token)=>{\r\n        return async(dispatch, getState) =>{\r\n            const respuesta = await axios.post('http://localhost:4000/api/like', {idItinerary, token},{\r\n                headers:{\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n            console.log(respuesta)\r\n        }\r\n    },\r\n    dislike:(idItinerary,token)=>{\r\n        return async(dispatch, getState) =>{\r\n            const respuesta = await axios.post('http://localhost:4000/api/dislike', {idItinerary, token},{\r\n                headers:{\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            })\r\n        }\r\n    }\r\n}   \r\n\r\nexport default itinerariesActions","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Itinerary.js",["113","114"],"import { connect } from \"react-redux\"\r\nimport { useState } from \"react\"\r\nimport Comment from './Comment'\r\nimport {faPaperPlane} from '@fortawesome/free-solid-svg-icons'\r\nimport itinerariesActions from '../redux/actions/itinerariesActions'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\n\r\n\r\nconst Itinerary = (props) =>{\r\n    const [visible, setVisible] = useState(false)\r\n    const [like, setLike] = useState(false)\r\n    const [value, setValue] = useState('')\r\n    \r\n    const comment = e =>{\r\n        setValue(e.target.value)\r\n    }\r\n    \r\n    const enviar = async (e) =>{\r\n        await props.enviarComment(value, props.itinerary._id,props.loggedUser.token)\r\n        props.listItineraries(props.id)\r\n        setValue('')\r\n    }\r\n    const keyPress = (e) =>{\r\n         if(e.key=== 'Enter'){\r\n             enviar();\r\n        }\r\n    }\r\n\r\n    const likesss = props.itinerary.likes\r\n    const encontraado = likesss.includes(props.loggedUser.idUser)\r\n    const likes = async(e) =>{\r\n        await props.like(props.itinerary._id,props.loggedUser.token)\r\n        props.listItineraries(props.id)\r\n    }\r\n    const dislike= async (e) =>{\r\n        await props.dislike(props.itinerary._id,props.loggedUser.token)\r\n        props.listItineraries(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"itinerario\">\r\n            <div className=\"containerItinerary\">\r\n                <div className=\"userItinerary\">\r\n                    <div className=\"userPic\" style={{backgroundImage:`url('${props.itinerary.userPic}')`}}>\r\n                    </div>\r\n                    <h5 key={props.itinerary.itineraryTitle}>{props.itinerary.userName}</h5>\r\n                </div>\r\n                <div className=\"infoItinerary\">\r\n                <h4>{props.itinerary.itineraryTitle}</h4>\r\n                    <div className=\"detalleItineray\">\r\n                        {props.loggedUser &&(\r\n                            encontraado ?\r\n                            <div onClick={dislike} className=\"iconoLike\" style={{backgroundImage:'url(\"../assets/corazon1.png\")'}}></div>\r\n                            :\r\n                            <div onClick={likes} className=\"iconoLike\" style={{backgroundImage:'url(\"../assets/corazon1vacio.png\")'}}></div>\r\n                        )}\r\n                        <h1>{likesss.length}</h1>\r\n                        <h6>{props.itinerary.hours} Hours</h6>\r\n                        <div style={{display:'flex', alignItems:'center',width:'50%'}}>Price:{[...Array(props.itinerary.price)].map((m,i)=>{\r\n                            return (<div key={i} style={{backgroundImage:'url(\"../assets/billete.png\")',margin:'0 2px',width:'2vw',height:'2vh',backgroundSize:'cover',backgroundPosition:'center'}}></div>)\r\n                        })}</div>\r\n                    </div>\r\n                    <div className=\"hastags\">\r\n                        {props.itinerary.hastags.map((hastag,i) => {\r\n                            return(<h6 key={i}>{hastag}</h6>)\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            {visible &&(\r\n                <>\r\n                <h4>Activities</h4>\r\n                <div className=\"activities\">\r\n                    {props.itinerary.activities.length !==0 ?\r\n                    (props.itinerary.activities.map(activity=>{\r\n                        return (\r\n                            <div key={activity._id}>\r\n                                <div className=\"containerActivity\">\r\n                                    <h4>{activity.activityTitle}</h4>                                \r\n                                    <div className=\"activity\" style={{backgroundImage:`url(.${activity.activityImage})`}}></div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    ) \r\n                    :\r\n                    <h4>No activities </h4>}\r\n                </div>\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                    <div className=\"containerComment\">\r\n                        {props.itinerary.comments.length !==0 ?\r\n                        (props.itinerary.comments.map(comment=>{\r\n                            return <Comment key={comment._id} comment={comment} id={props.itinerary._id} idCity={props.id}/>\r\n                        }))                    \r\n                            :\r\n                        <h4>No comments</h4>}\r\n                        {props.loggedUser ?<div style={{display:'flex', alignItems:'center'}}><input className=\"comentario\" autoComplete=\"off\" id=\"comentario\" value={value}  type=\"text\" placeholder=\"Your comment!\"  onChange={comment} onKeyPress={keyPress}/><p onClick={enviar}><FontAwesomeIcon icon={faPaperPlane} style={{color:'#1c4573'}} /></p></div>\r\n                        :\r\n                        <input className=\"comentario\" disabled type=\"text\" placeholder=\"You must be logged to comment!\"/>}\r\n                    </div>\r\n                </div>\r\n                </>\r\n            )}\r\n            <button onClick={()=> setVisible(!visible)}className=\"buttonActivities\">{visible ? 'View less' : 'View more'}</button>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst mapStateToProps =state => {\r\n    return {\r\n        loggedUser:state.userR.loggedUser,\r\n        commentario: state.itineraryR.comment\r\n    }\r\n}\r\nconst mapDispatchToProps ={\r\n    enviarComment: itinerariesActions.addComment,\r\n    listItineraries:itinerariesActions.getItinerary,\r\n    borrarComment: itinerariesActions.deleteComment,\r\n    like:itinerariesActions.like,\r\n    dislike: itinerariesActions.dislike\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Itinerary)","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\Comment.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\SignIn.js",["115"],"import React, {useEffect,useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport userActions from '../redux/actions/userActions'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n\r\nconst SignIn = (props)=>{\r\n    const [loguear,setLoguear] = useState({\r\n        userName:'', password:''\r\n    })\r\n    const [errores, setErrores] = useState([])\r\n\r\n    const leerInput = e =>{\r\n        const valor = e.target.value\r\n        const campo = e.target.name\r\n        setLoguear({\r\n            ...loguear,\r\n            [campo]: valor\r\n        })\r\n    }\r\n    const validarUsuario = async e =>{\r\n        e.preventDefault()\r\n        if(loguear.userName==='' || loguear.password===''){\r\n            const MySwal = withReactContent(Swal)\r\n            MySwal.fire({\r\n            title: <p className=\"popup\">All fields are required!</p>,\r\n            icon:'error',\r\n            toast: true,\r\n            timer:2000,\r\n            timerProgressBar:true,\r\n            showConfirmButton:false,\r\n            width:'30vw',                        \r\n            })\r\n            return false\r\n        }\r\n        setErrores([])\r\n        const respuesta = await props.loginUser(loguear)\r\n        if(respuesta && !respuesta.success){\r\n            setErrores([respuesta.mensaje])\r\n        }\r\n        else {\r\n            const MySwal = withReactContent(Swal)\r\n            MySwal.fire({\r\n            title: <p className=\"popup\">Welcome! {loguear.userName}</p>,\r\n            icon:'success',\r\n            toast: true,\r\n            timer:2000,\r\n            timerProgressBar:true,\r\n            showConfirmButton:false,\r\n            width:'30vw',                        \r\n            })\r\n            setTimeout(() => {\r\n                props.history.push('/')    \r\n            }, 2000);        \r\n        }\r\n    }\r\n    const responseGoogle = async response => {\r\n        if (response.error) {\r\n            const MySwal = withReactContent(Swal)\r\n            MySwal.fire({\r\n            title: <p className=\"popup\">Error</p>,\r\n            icon:'error',\r\n            toast: true,\r\n            timer:2000,\r\n            timerProgressBar:true,\r\n            showConfirmButton:false,\r\n            width:'30vw',                        \r\n            })\r\n        } else {\r\n            const respuesta = await props.loginUser({\r\n                userName: response.profileObj.givenName,\r\n                password: response.profileObj.googleId,\r\n            })\r\n        if (respuesta && !respuesta.success) {\r\n            setErrores([respuesta.mensaje])\r\n        } else {\r\n            const MySwal = withReactContent(Swal)\r\n            MySwal.fire({\r\n                title: <p className=\"popup\">Welcome!</p>,\r\n                icon:'success',\r\n                toast: true,\r\n                timer:2000,\r\n                timerProgressBar:true,\r\n                showConfirmButton:false,\r\n                width:'30vw',                        \r\n                })\r\n                setTimeout(() => {\r\n                    props.history.push('/')    \r\n                }, 2000);   \r\n        }\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"SignUp\">\r\n            <h4>Sign In</h4>\r\n            <div className=\"formulario\">\r\n                <input type=\"text\"autoComplete=\"nope\"  name=\"userName\" placeholder=\"Username\" onChange={leerInput}/>\r\n                <input type=\"password\" autoComplete=\"nope\" name=\"password\" placeholder=\"Password\" onChange={leerInput}/>\r\n            </div>\r\n            <button className=\"buttonCall\" onClick={validarUsuario}>Validar</button>\r\n            <GoogleLogin\r\n                clientId=\"1033031988698-pivaiq2e71rsq2njp75tfdd952jgl950.apps.googleusercontent.com\"\r\n                buttonText=\"Sign In with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            <div className=\"error\">\r\n                {errores.map(error => <p>{error}</p>)}\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nconst mapStateToProps = state=>{\r\n    return {\r\n        loggedUser:state.userR.loggedUser,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loginUser:userActions.loginUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\components\\SignUp.js",["116","117"],"import React, {useEffect,useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport userActions from '../redux/actions/userActions'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst SignUp = (props)=>{\r\n\r\n    const [nuevoUser,setNuevoUser] = useState({\r\n        nombre:'',apellido:'',userName:'',email:'',urlPic:'',pais:''\r\n    })\r\n    const [error, setError] = useState({})\r\n    const [errores, setErrores] = useState([])\r\n\r\n    const leerInput = e =>{\r\n        const valor = e.target.value\r\n        const campo = e.target.name\r\n        setNuevoUser({\r\n            ...nuevoUser,\r\n            [campo]: valor\r\n        })\r\n    }\r\n    const validarUsuario = async e =>{\r\n        e.preventDefault()\r\n        const respuesta = await props.newUser(nuevoUser)\r\n        if(respuesta && !respuesta.success){\r\n            const arrayErrores = respuesta.errores.details                 \r\n            const erroresObj ={\r\n                nombre:null,apellido:null,userName:null,email:null,password:null,urlPic:null,pais:null\r\n            }\r\n            arrayErrores && arrayErrores.map(error =>{\r\n                erroresObj[error.context.label] = error.message\r\n                return false\r\n            })\r\n            setError(erroresObj)\r\n            setErrores(respuesta.errores)\r\n\r\n        }\r\n        else {\r\n            const MySwal = withReactContent(Swal)\r\n            MySwal.fire({\r\n                title: <p className=\"popup\">Create exit. Welcome! </p>,\r\n                icon:'success',\r\n                toast: true,\r\n                timer:2000,\r\n                timerProgressBar:true,\r\n                showConfirmButton:false,\r\n                width:'30vw',                        \r\n                })\r\n            setTimeout(() => {\r\n                props.history.push('/')    \r\n            }, 2000);       \r\n        } \r\n    }\r\n    useEffect(()=>{\r\n        props.countries()\r\n    },[])\r\n    const responseGoogle = async (response) => {\r\n\r\n        if(response.error){\r\n            const MySwal = withReactContent(Swal)\r\n            MySwal.fire({\r\n            title: <p className=\"popup\">Error </p>,\r\n            icon:'error',\r\n            toast: true,\r\n            timer:2000,\r\n            timerProgressBar:true,\r\n            showConfirmButton:false,\r\n            width:'30vw',                        \r\n            })\r\n        }else {\r\n            const respuesta = await props.newUser({\r\n                userName: response.profileObj.givenName,\r\n                password: response.profileObj.googleId,\r\n                nombre: response.profileObj.givenName,\r\n                apellido: response.profileObj.familyName,\r\n                urlPic:response.profileObj.imageUrl,\r\n                pais:'indefinido'\r\n            })\r\n            if(respuesta && !respuesta.success){\r\n                \r\n                const arrayErrores = respuesta.errores.details                 \r\n                const erroresObj ={\r\n                    nombre:null,apellido:null,userName:null,email:null,password:null,urlPic:null,pais:null\r\n                }\r\n                arrayErrores && arrayErrores.map(error =>{\r\n                    erroresObj[error.context.label] = error.message\r\n                    return false\r\n                })\r\n                setError(erroresObj)\r\n                setErrores(respuesta.errores)\r\n\r\n            }\r\n            else {\r\n                const MySwal = withReactContent(Swal)\r\n                MySwal.fire({\r\n                    title: <p className=\"popup\">Create exit. Welcome! </p>,\r\n                    icon:'success',\r\n                    toast: true,\r\n                    timer:2000,\r\n                    timerProgressBar:true,\r\n                    showConfirmButton:false,\r\n                    width:'30vw',                        \r\n                    })\r\n                    setTimeout(() => {\r\n                        props.history.push('/')    \r\n                    }, 2000);    \r\n            }\r\n        }\r\n      }\r\n    return(\r\n        <div className=\"SignUp\">\r\n            <h4>Create Account</h4>\r\n            <div className=\"formulario\">\r\n                {error.nombre && <p className=\"error\">{error.nombre}</p>}\r\n                <input type=\"text\" autoComplete=\"nope\"  name=\"nombre\" placeholder=\"First Name\" onChange={leerInput}/>                \r\n                {error.apellido && <p className=\"error\">{error.apellido}</p>}\r\n                <input type=\"text\" autoComplete=\"nope\"  name=\"apellido\" placeholder=\"Last Name\" onChange={leerInput}/>\r\n                {error.userName && <p className=\"error\">{error.userName}</p>}\r\n                <input type=\"text\"autoComplete=\"nope\"  name=\"userName\" placeholder=\"Username\" onChange={leerInput}/>\r\n                {error.email && <p className=\"error\">{error.email}</p>}\r\n                <input type=\"text\" autoComplete=\"nope\"  name=\"email\" placeholder=\"Email\" onChange={leerInput}/>\r\n                {error.urlPic && <p className=\"error\">{error.urlPic}</p>}\r\n                <input type=\"text\" autoComplete=\"nope\"  name=\"urlPic\" placeholder=\"Url Pic\" onChange={leerInput}/>\r\n                <select name=\"pais\" id=\"\" onChange={leerInput}>\r\n                    <option value=\"\" disabled selected>--</option>                   \r\n                    {props.listCountries && props.listCountries.map(country =>{\r\n                        return <option value={country.name}>{country.name}</option>\r\n                    })}\r\n                </select>\r\n                {error.password && <p className=\"error\">{error.password}</p>}\r\n                <input type=\"text\" autoComplete=\"nope\" name=\"password\" placeholder=\"Password\" onChange={leerInput}/>\r\n                \r\n            </div>\r\n            <button className=\"buttonCall\" onClick={validarUsuario}>Create Account</button>\r\n            <GoogleLogin\r\n                clientId=\"516285407423-qqvg7pnoibihom6j5rurfub6ma5b5l70.apps.googleusercontent.com\"\r\n                buttonText=\"Create Account with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            {/* <div className=\"error\">\r\n                {errores && errores.map(error => <p>{error}</p>)}\r\n            </div> */}\r\n        </div>\r\n    )\r\n    \r\n}\r\nconst mapStateToProps = state=>{\r\n    return {\r\n        loggedUser:state.userR.loggedUser,\r\n        listCountries: state.userR.countries\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    newUser:userActions.newUser,\r\n    countries:userActions.allCountries\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\Alejandro\\Documents\\mindhub\\MERN\\Romero-mytinerary\\frontend\\src\\redux\\actions\\userActions.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":21,"column":7,"nodeType":"126","endLine":21,"endColumn":9,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":14,"column":7,"nodeType":"126","endLine":14,"endColumn":9,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":51,"column":19,"nodeType":"132","messageId":"133","endLine":51,"endColumn":28},{"ruleId":"130","severity":1,"message":"134","line":12,"column":12,"nodeType":"132","messageId":"133","endLine":12,"endColumn":16},{"ruleId":"130","severity":1,"message":"135","line":12,"column":18,"nodeType":"132","messageId":"133","endLine":12,"endColumn":25},{"ruleId":"130","severity":1,"message":"136","line":1,"column":16,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"137","line":14,"column":12,"nodeType":"132","messageId":"133","endLine":14,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":58,"column":7,"nodeType":"126","endLine":58,"endColumn":9,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["142"],"no-unused-vars","'respuesta' is assigned a value but never used.","Identifier","unusedVar","'like' is assigned a value but never used.","'setLike' is assigned a value but never used.","'useEffect' is defined but never used.","'errores' is assigned a value but never used.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},"Update the dependencies array to be: [id, props]",{"range":"149","text":"150"},"Update the dependencies array to be: [props]",{"range":"151","text":"152"},{"range":"153","text":"152"},[682,684],"[id, props]",[379,381],"[props]",[1991,1993]]